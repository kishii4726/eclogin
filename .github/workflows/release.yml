name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      release_tag:
        type: string
        required: true
        description: "release version. e.g. v0.0.1"

jobs:

  tag:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag ${{ github.event.inputs.release_tag }}
          git push origin ${{ github.event.inputs.release_tag }}

  release:
    needs: tag
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    permissions:
      contents: write

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        release_name: Release ${{ github.event.inputs.release_tag }}
        draft: false
        prerelease: false

  build:
    needs: release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.22

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Build
      run: |
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v .
        mv smsh smsh-${{ matrix.goos }}-${{ matrix.goarch }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./smsh-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_name: smsh-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_content_type: application/octet-stream
